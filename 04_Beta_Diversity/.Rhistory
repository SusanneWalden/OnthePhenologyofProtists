#geom_text(aes(x = 1, y = -1, label = as.character(paste0(Cerco.NMDS.bray$ndim, "D Stress: ", round(as.numeric(Cerco.NMDS.bray$stress), digits = 4)))), parse = F,     color = "#5d5f66", size = 4) +
coord_equal() +
theme_classic() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16, face = "bold"),
legend.text = element_text(size = 16),
legend.title = element_blank())+
theme(plot.title = element_text(hjust = 0.5, size= 14))#+
#theme(plot.margin = margin(1,1,1,1, "cm"))
g
f=g#leaf litter
f <- f + theme(legend.position = "none")
OTU_Table = as.data.frame(read.csv2("../00_Data/05_Cercozoa_Seasonal_OTU_Table_min-freq-7633_transposed_withMetadata.csv",header = T))
OTU_Table <- OTU_Table[ which(OTU_Table$Microhabitat == 'Soil'),]
species = OTU_Table[,18:ncol(OTU_Table)]
species.mat = as.matrix(species)
species.mat = make_relative(species.mat)
SampleMetadata = as.data.frame(OTU_Table[,1:17])
rownames(species.mat) <- OTU_Table[,1]
#caclulate metaMDS
Cerco.NMDS.bray<-metaMDS(species.mat, dist="bray", k=3, trymax=100,wascores=TRUE, trace=TRUE, zero="add")
#(fit.Cerco.NMDS.bray <- envfit(Cerco.NMDS.bray, SampleMetadata, perm = 999))
#### small plot to check wether its the same result as in the pcoa
data.scores = as.data.frame(scores(Cerco.NMDS.bray))
data.scores$site = rownames(data.scores)
data.scores$Season = SampleMetadata$Season
data.scores$SamplingDescription = SampleMetadata$SamplingDescription
#group by season
Group.Spring = data.scores[data.scores$Season == "Spring",][chull(data.scores[data.scores$Season == "Spring", c("NMDS1", "NMDS2")]), ]
Group.Autumn = data.scores[data.scores$Season == "Autumn",][chull(data.scores[data.scores$Season == "Autumn", c("NMDS1", "NMDS2")]), ]
#group by sampling period
Group.Autumn_2017 = data.scores[data.scores$SamplingDescription == "Autumn 2017",][chull(data.scores[data.scores$SamplingDescription == "Autumn 2017", c("NMDS1", "NMDS2")]), ]
Group.Spring_2018 = data.scores[data.scores$SamplingDescription == "Spring 2018",][chull(data.scores[data.scores$SamplingDescription == "Spring 2018", c("NMDS1", "NMDS2")]), ]
Group.Autumn_2018 = data.scores[data.scores$SamplingDescription == "Autumn 2018",][chull(data.scores[data.scores$SamplingDescription == "Autumn 2018", c("NMDS1", "NMDS2")]), ]
Group.Spring_2019 = data.scores[data.scores$SamplingDescription == "Spring 2019",][chull(data.scores[data.scores$SamplingDescription == "Spring 2019", c("NMDS1", "NMDS2")]), ]
#the hull-data will be needed by ggplot later to draw the polygons
hull.data = rbind(Group.Autumn_2017, Group.Spring_2018,Group.Autumn_2018, Group.Spring_2019)
hull.data_Season = rbind(Group.Spring, Group.Autumn)
############## PLOT ##################
g=ggplot() +
geom_polygon(data = hull.data,
aes(x=NMDS1, y=NMDS2, group = SamplingDescription, fill = SamplingDescription),
alpha = 0.5) +
scale_fill_manual(values = c("#99597f","#660033","#9fb7b0","#296252"),
limits = c("Autumn 2017","Autumn 2018","Spring 2018","Spring 2019")) +
scale_color_manual(values=c("#99597f","#660033","#9fb7b0","#296252"))+
geom_polygon(data = hull.data_Season,
aes(x=NMDS1, y=NMDS2, group = Season, color = Season),
alpha = 0.8, fill = NA, linetype = "dashed", size = 1) +
scale_color_manual(values = c("#770e4c", "#22735c")) +
geom_point(data = data.scores,
aes(x = NMDS1, y = NMDS2, shape=Season),
size = 2,color = "#5d5f66") +
#geom_text(aes(x = 1, y = -1, label = as.character(paste0(Cerco.NMDS.bray$ndim, "D Stress: ", round(as.numeric(Cerco.NMDS.bray$stress), digits = 4)))), parse = F,     color = "#5d5f66", size = 4) +
coord_equal() +
theme_classic() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16, face = "bold"),
legend.text = element_text(size = 16),
legend.title = element_blank())+
theme(plot.title = element_text(hjust = 0.5, size= 14))#+
#theme(plot.margin = margin(1,1,1,1, "cm"))
g
g=g#soil
g <- g + theme(legend.position = "none")
a=a+ ggtitle("Fresh Leaves")+theme(plot.title = element_text(size = 16))
b=b+ ggtitle("Deadwood")+theme(plot.title = element_text(size = 16))
c=c+ ggtitle("Arboreal Soil")+theme(plot.title = element_text(size = 16))
d=d+ ggtitle("Bark")+theme(plot.title = element_text(size = 16))
e=e+ ggtitle("Epiphytes")+theme(plot.title = element_text(size = 16))
f=f+ ggtitle("Leaf litter")+theme(plot.title = element_text(size = 16))
g=g+ ggtitle("Soil")+theme(plot.title = element_text(size = 16))
combi = ggarrange(a,
b+theme(axis.title.y = element_blank()),
c,
d+theme(axis.title.y = element_blank()),
e,
f+theme( axis.title.y = element_blank()),
g,leg,
ncol = 2, nrow = 4, align = "h")#+
ggsave("NMDS_Microhabitats_test2.jpeg", plot = combi,
device = "jpeg", dpi = 300, width = 228, height = 400,
units = "mm")
e=g#epiphytes
e <- e + theme(legend.position = "none")
a=a+ ggtitle("Fresh Leaves")+theme(plot.title = element_text(size = 16))
b=b+ ggtitle("Deadwood")+theme(plot.title = element_text(size = 16))
c=c+ ggtitle("Arboreal Soil")+theme(plot.title = element_text(size = 16))
d=d+ ggtitle("Bark")+theme(plot.title = element_text(size = 16))
e=e+ ggtitle("Epiphytes")+theme(plot.title = element_text(size = 16))
f=f+ ggtitle("Leaf litter")+theme(plot.title = element_text(size = 16))
g=g+ ggtitle("Soil")+theme(plot.title = element_text(size = 16))
combi = ggarrange(a,
b+theme(axis.title.y = element_blank()),
c,
d+theme(axis.title.y = element_blank()),
e,
f+theme( axis.title.y = element_blank()),
g,leg,
ncol = 2, nrow = 4, align = "h")#+
ggsave("NMDS_Microhabitats_test2.jpeg", plot = combi,
device = "jpeg", dpi = 300, width = 228, height = 400,
units = "mm")
OTU_Table = as.data.frame(read.csv2("../00_Data/05_Cercozoa_Seasonal_OTU_Table_min-freq-7633_transposed_withMetadata.csv",header = T))
OTU_Table <- OTU_Table[which(OTU_Table$Microhabitat == "Hypnum"|OTU_Table$Microhabitat == "Orthotrichum"|OTU_Table$Microhabitat == "Lichen"),]
species = OTU_Table[,18:ncol(OTU_Table)]
species.mat = as.matrix(species)
species.mat = make_relative(species.mat)
SampleMetadata = as.data.frame(OTU_Table[,1:17])
rownames(species.mat) <- OTU_Table[,1]
#caclulate metaMDS
Cerco.NMDS.bray<-metaMDS(species.mat, dist="bray", k=3, trymax=100,wascores=TRUE, trace=TRUE, zero="add")
#(fit.Cerco.NMDS.bray <- envfit(Cerco.NMDS.bray, SampleMetadata, perm = 999))
#### small plot to check wether its the same result as in the pcoa
data.scores = as.data.frame(scores(Cerco.NMDS.bray))
data.scores$site = rownames(data.scores)
data.scores$Season = SampleMetadata$Season
data.scores$SamplingDescription = SampleMetadata$SamplingDescription
#group by season
Group.Spring = data.scores[data.scores$Season == "Spring",][chull(data.scores[data.scores$Season == "Spring", c("NMDS1", "NMDS2")]), ]
Group.Autumn = data.scores[data.scores$Season == "Autumn",][chull(data.scores[data.scores$Season == "Autumn", c("NMDS1", "NMDS2")]), ]
#group by sampling period
Group.Autumn_2017 = data.scores[data.scores$SamplingDescription == "Autumn 2017",][chull(data.scores[data.scores$SamplingDescription == "Autumn 2017", c("NMDS1", "NMDS2")]), ]
Group.Spring_2018 = data.scores[data.scores$SamplingDescription == "Spring 2018",][chull(data.scores[data.scores$SamplingDescription == "Spring 2018", c("NMDS1", "NMDS2")]), ]
Group.Autumn_2018 = data.scores[data.scores$SamplingDescription == "Autumn 2018",][chull(data.scores[data.scores$SamplingDescription == "Autumn 2018", c("NMDS1", "NMDS2")]), ]
Group.Spring_2019 = data.scores[data.scores$SamplingDescription == "Spring 2019",][chull(data.scores[data.scores$SamplingDescription == "Spring 2019", c("NMDS1", "NMDS2")]), ]
#the hull-data will be needed by ggplot later to draw the polygons
hull.data = rbind(Group.Autumn_2017, Group.Spring_2018,Group.Autumn_2018, Group.Spring_2019)
hull.data_Season = rbind(Group.Spring, Group.Autumn)
############## PLOT ##################
z=ggplot() +
geom_polygon(data = hull.data,
aes(x=NMDS1, y=NMDS2, group = SamplingDescription, fill = SamplingDescription),
alpha = 0.5) +
scale_fill_manual(values = c("#99597f","#660033","#9fb7b0","#296252"),
limits = c("Autumn 2017","Autumn 2018","Spring 2018","Spring 2019")) +
scale_color_manual(values=c("#99597f","#660033","#9fb7b0","#296252"))+
geom_polygon(data = hull.data_Season,
aes(x=NMDS1, y=NMDS2, group = Season, color = Season),
alpha = 0.8, fill = NA, linetype = "dashed", size = 1) +
scale_color_manual(values = c("#770e4c", "#22735c")) +
geom_point(data = data.scores,
aes(x = NMDS1, y = NMDS2, shape=Season),
size = 2,color = "#5d5f66") +
#geom_text(aes(x = 1, y = -1, label = as.character(paste0(Cerco.NMDS.bray$ndim, "D Stress: ", round(as.numeric(Cerco.NMDS.bray$stress), digits = 4)))), parse = F,     color = "#5d5f66", size = 4) +
coord_equal() +
theme_classic() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16, face = "bold"),
legend.text = element_text(size = 16),
legend.title = element_blank())+
theme(plot.title = element_text(hjust = 0.5, size= 14))#+
#theme(plot.margin = margin(1,1,1,1, "cm"))
e=z#epiphytes
e <- e + theme(legend.position = "none")
e=e+ ggtitle("Epiphytes")+theme(plot.title = element_text(size = 16))
combi = ggarrange(a,
b+theme(axis.title.y = element_blank()),
c,
d+theme(axis.title.y = element_blank()),
e,
f+theme( axis.title.y = element_blank()),
g,leg,
ncol = 2, nrow = 4, align = "h")#+
ggsave("NMDS_Microhabitats_test2.jpeg", plot = combi,
device = "jpeg", dpi = 300, width = 228, height = 400,
units = "mm")
combi = ggarrange(a,
b+theme(axis.title.y = element_blank()),
c,
d+theme(axis.title.y = element_blank()),
e,
f+theme( axis.title.y = element_blank()),
g,leg,
ncol = 2, nrow = 4, align = "h")+
theme(plot.margin = margin(1,1,1,1, "cm"))
ggsave("NMDS_Microhabitats_test2.jpeg", plot = combi,
device = "jpeg", dpi = 300, width = 228, height = 400,
units = "mm")
f=f+ ggtitle("Leaf Litter")+theme(plot.title = element_text(size = 16))
combi = ggarrange(a,
b+theme(axis.title.y = element_blank()),
c,
d+theme(axis.title.y = element_blank()),
e,
f+theme( axis.title.y = element_blank()),
g,leg,
ncol = 2, nrow = 4, align = "h")+
theme(plot.margin = margin(1,1,1,1, "cm"))
ggsave("NMDS_Microhabitats_test2.jpeg", plot = combi,
device = "jpeg", dpi = 300, width = 228, height = 400,
units = "mm")
ggsave("NMDS_Microhabitats_300_228x400.jpeg", plot = combi,
device = "jpeg", dpi = 300, width = 228, height = 400,
units = "mm")
ggsave("NMDS_Microhabitats_600_228x400.tif", plot = combi,
device = "tiff", dpi = 600, width = 228, height = 400,
units = "mm")
OTU_Table = as.data.frame(read.csv2("../00_Data/05_Cercozoa_Seasonal_OTU_Table_min-freq-7633_transposed_withMetadata.csv",header = T))
#fresh leaves only
OTU_Table <- OTU_Table[ which(OTU_Table$Microhabitat == 'Fresh Leaves'),]
species = OTU_Table[,18:ncol(OTU_Table)]
species.mat = as.matrix(species)
species.mat = make_relative(species.mat)
SampleMetadata = as.data.frame(OTU_Table[,1:17])
rownames(species.mat) <- OTU_Table[,1]
#caclulate metaMDS
Cerco.NMDS.bray<-metaMDS(species.mat, dist="bray", k=3, trymax=100,wascores=TRUE, trace=TRUE, zero="add")
#(fit.Cerco.NMDS.bray <- envfit(Cerco.NMDS.bray, SampleMetadata, perm = 999))
#### small plot to check wether its the same result as in the pcoa
data.scores = as.data.frame(scores(Cerco.NMDS.bray))
data.scores$site = rownames(data.scores)
data.scores$Season = SampleMetadata$Season
data.scores$SamplingDescription = SampleMetadata$SamplingDescription
#group by season
Group.Spring = data.scores[data.scores$Season == "Spring",][chull(data.scores[data.scores$Season == "Spring", c("NMDS1", "NMDS2")]), ]
Group.Autumn = data.scores[data.scores$Season == "Autumn",][chull(data.scores[data.scores$Season == "Autumn", c("NMDS1", "NMDS2")]), ]
#group by sampling period
Group.Autumn_2017 = data.scores[data.scores$SamplingDescription == "Autumn 2017",][chull(data.scores[data.scores$SamplingDescription == "Autumn 2017", c("NMDS1", "NMDS2")]), ]
Group.Spring_2018 = data.scores[data.scores$SamplingDescription == "Spring 2018",][chull(data.scores[data.scores$SamplingDescription == "Spring 2018", c("NMDS1", "NMDS2")]), ]
Group.Autumn_2018 = data.scores[data.scores$SamplingDescription == "Autumn 2018",][chull(data.scores[data.scores$SamplingDescription == "Autumn 2018", c("NMDS1", "NMDS2")]), ]
Group.Spring_2019 = data.scores[data.scores$SamplingDescription == "Spring 2019",][chull(data.scores[data.scores$SamplingDescription == "Spring 2019", c("NMDS1", "NMDS2")]), ]
#the hull-data will be needed by ggplot later to draw the polygons
hull.data = rbind(Group.Autumn_2017, Group.Spring_2018,Group.Autumn_2018, Group.Spring_2019)
hull.data_Season = rbind(Group.Spring, Group.Autumn)
############## PLOT ##################
g=ggplot() +
geom_polygon(data = hull.data,
aes(x=NMDS1, y=NMDS2, group = SamplingDescription, fill = SamplingDescription),
alpha = 0.5) +
scale_fill_manual(values = c("#99597f","#660033","#9fb7b0","#296252"),
limits = c("Autumn 2017","Autumn 2018","Spring 2018","Spring 2019")) +
scale_color_manual(values=c("#99597f","#660033","#9fb7b0","#296252"))+
geom_polygon(data = hull.data_Season,
aes(x=NMDS1, y=NMDS2, group = Season, color = Season),
alpha = 0.8, fill = NA, linetype = "dashed", size = 1) +
scale_color_manual(values = c("#770e4c", "#22735c")) +
geom_point(data = data.scores,
aes(x = NMDS1, y = NMDS2, shape=Season),
size = 2,color = "#5d5f66") +
#geom_text(aes(x = 1, y = -1, label = as.character(paste0(Cerco.NMDS.bray$ndim, "D Stress: ", round(as.numeric(Cerco.NMDS.bray$stress), digits = 4)))), parse = F,     color = "#5d5f66", size = 4) +
coord_equal() +
theme_classic() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16, face = "bold"),
legend.text = element_text(size = 16),
legend.title = element_blank())+
theme(plot.title = element_text(hjust = 0.5, size= 14))#+
#theme(plot.margin = margin(1,1,1,1, "cm"))
g
a=g
a
g=ggplot() +
geom_polygon(data = hull.data,
aes(x=NMDS1, y=NMDS2, group = SamplingDescription, fill = SamplingDescription),
alpha = 0.5) +
scale_fill_manual(values = c("#99597f","#660033","#9fb7b0","#296252"),
limits = c("Autumn 2017","Autumn 2018","Spring 2018","Spring 2019")) +
scale_color_manual(values=c("#99597f","#660033","#9fb7b0","#296252"))+
geom_polygon(data = hull.data_Season,
aes(x=NMDS1, y=NMDS2, group = Season, color = Season),
alpha = 0.8, fill = NA, linetype = "dashed", size = 1) +
scale_color_manual(values = c("#770e4c", "#22735c")) +
geom_point(data = data.scores,
aes(x = NMDS1, y = NMDS2, shape=Season),
size = 2,color = "#5d5f66") +
#geom_text(aes(x = 1, y = -1, label = as.character(paste0(Cerco.NMDS.bray$ndim, "D Stress: ", round(as.numeric(Cerco.NMDS.bray$stress), digits = 4)))), parse = F,     color = "#5d5f66", size = 4) +
coord_equal() +
theme_minimal() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16, face = "bold"),
legend.text = element_text(size = 16),
legend.title = element_blank())+
theme(plot.title = element_text(hjust = 0.5, size= 14))#+
g
a=g
ggsave("NMDS_Leaves_300_160x160.jpeg", plot = a,
device = "jpeg", dpi = 300, width = 160, height = 160,
units = "mm")
ggsave("NMDS_Leaves_300_160x160.jpeg", plot = a,
device = "jpeg", dpi = 300, width = 160, height = 120,
units = "mm")
g=ggplot() +
geom_polygon(data = hull.data,
aes(x=NMDS1, y=NMDS2, group = SamplingDescription, fill = SamplingDescription),
alpha = 0.5) +
scale_fill_manual(values = c("#99597f","#660033","#9fb7b0","#296252"),
limits = c("Autumn 2017","Autumn 2018","Spring 2018","Spring 2019")) +
scale_color_manual(values=c("#99597f","#660033","#9fb7b0","#296252"))+
geom_polygon(data = hull.data_Season,
aes(x=NMDS1, y=NMDS2, group = Season, color = Season),
alpha = 0.8, fill = NA, linetype = "dashed", size = 1) +
scale_color_manual(values = c("#770e4c", "#22735c")) +
geom_point(data = data.scores,
aes(x = NMDS1, y = NMDS2, shape=Season),
size = 2,color = "#5d5f66") +
#geom_text(aes(x = 1, y = -1, label = as.character(paste0(Cerco.NMDS.bray$ndim, "D Stress: ", round(as.numeric(Cerco.NMDS.bray$stress), digits = 4)))), parse = F,     color = "#5d5f66", size = 4) +
coord_equal() +
theme_minimal() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16, face = "bold"),
legend.text = element_text(size = 16),
legend.title = element_blank())+
theme(plot.title = element_text(hjust = 0.5, size= 14))+
theme(plot.margin = margin(1,1,1,1, "cm"))
g
a=g
ggsave("NMDS_Leaves_300_160x120.jpeg", plot = a,
device = "jpeg", dpi = 300, width = 160, height = 120,
units = "mm")
ggsave("NMDS_Leaves_600_160x120.tif", plot = combi,
device = "tiff", dpi = 600, width = 160, height = 120,
units = "mm")
ggsave("NMDS_Leaves_600_160x120.tif", plot = a,
device = "tiff", dpi = 600, width = 160, height = 120,
units = "mm")
g=ggplot() +
geom_polygon(data = hull.data,
aes(x=NMDS1, y=NMDS2, group = SamplingDescription, fill = SamplingDescription),
alpha = 0.5) +
scale_fill_manual(values = c("#99597f","#660033","#9fb7b0","#296252"),
limits = c("Autumn 2017","Autumn 2018","Spring 2018","Spring 2019")) +
scale_color_manual(values=c("#99597f","#660033","#9fb7b0","#296252"))+
geom_polygon(data = hull.data_Season,
aes(x=NMDS1, y=NMDS2, group = Season, color = Season),
alpha = 0.8, fill = NA, linetype = "dashed", size = 1) +
scale_color_manual(values = c("#770e4c", "#22735c")) +
geom_point(data = data.scores,
aes(x = NMDS1, y = NMDS2, shape=Season),
size = 2,color = "#5d5f66") +
geom_text(aes(x = 1, y = -1, label = as.character(paste0(Cerco.NMDS.bray$ndim, "D Stress: ", round(as.numeric(Cerco.NMDS.bray$stress), digits = 4)))), parse = F,     color = "#5d5f66", size = 4) +
coord_equal() +
theme_minimal() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16, face = "bold"),
legend.text = element_text(size = 16),
legend.title = element_blank())+
theme(plot.title = element_text(hjust = 0.5, size= 14))#+
g
a=g#fresh leaves
g=ggplot() +
geom_polygon(data = hull.data,
aes(x=NMDS1, y=NMDS2, group = SamplingDescription, fill = SamplingDescription),
alpha = 0.5) +
scale_fill_manual(values = c("#99597f","#660033","#9fb7b0","#296252"),
limits = c("Autumn 2017","Autumn 2018","Spring 2018","Spring 2019")) +
scale_color_manual(values=c("#99597f","#660033","#9fb7b0","#296252"))+
geom_polygon(data = hull.data_Season,
aes(x=NMDS1, y=NMDS2, group = Season, color = Season),
alpha = 0.8, fill = NA, linetype = "dashed", size = 1) +
scale_color_manual(values = c("#770e4c", "#22735c")) +
geom_point(data = data.scores,
aes(x = NMDS1, y = NMDS2, shape=Season),
size = 2,color = "#5d5f66") +
geom_text(aes(x = 1, y = -1, label = as.character(paste0(Cerco.NMDS.bray$ndim, "D Stress: ", round(as.numeric(Cerco.NMDS.bray$stress), digits = 4)))), parse = F,     color = "#5d5f66", size = 4) +
coord_equal() +
theme_minimal() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16, face = "bold"),
legend.text = element_text(size = 16),
legend.title = element_blank())+
theme(plot.title = element_text(hjust = 0.5, size= 14))+
theme(plot.margin = margin(1,1,1,1, "cm"))
a=g#fresh leaves
ggsave("NMDS_Leaves_300_160x120.jpeg", plot = a,
device = "jpeg", dpi = 300, width = 160, height = 120,
units = "mm")
ggsave("NMDS_Leaves_600_160x120.tif", plot = a,
device = "tiff", dpi = 600, width = 160, height = 120,
units = "mm")
g=ggplot() +
geom_polygon(data = hull.data,
aes(x=NMDS1, y=NMDS2, group = SamplingDescription, fill = SamplingDescription),
alpha = 0.5) +
scale_fill_manual(values = c("#99597f","#660033","#9fb7b0","#296252"),
limits = c("Autumn 2017","Autumn 2018","Spring 2018","Spring 2019")) +
scale_color_manual(values=c("#99597f","#660033","#9fb7b0","#296252"))+
geom_polygon(data = hull.data_Season,
aes(x=NMDS1, y=NMDS2, group = Season, color = Season),
alpha = 0.8, fill = NA, linetype = "dashed", size = 1) +
scale_color_manual(values = c("#770e4c", "#22735c")) +
geom_point(data = data.scores,
aes(x = NMDS1, y = NMDS2, shape=Season),
size = 2,color = "#5d5f66") +
geom_text(aes(x = 1, y = -1, label = as.character(paste0(Cerco.NMDS.bray$ndim, "D Stress: ", round(as.numeric(Cerco.NMDS.bray$stress), digits = 4)))), parse = F,     color = "#5d5f66", size = 3) +
coord_equal() +
theme_minimal() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16, face = "bold"),
legend.text = element_text(size = 16),
legend.title = element_blank())+
theme(plot.title = element_text(hjust = 0.5, size= 14))+
theme(plot.margin = margin(1,1,1,1, "cm"))
g
ggsave("NMDS_Leaves_300_160x120.jpeg", plot = a,
device = "jpeg", dpi = 300, width = 160, height = 120,
units = "mm")
ggsave("NMDS_Leaves_600_160x120.tif", plot = a,
device = "tiff", dpi = 600, width = 160, height = 120,
units = "mm")
g=ggplot() +
geom_polygon(data = hull.data,
aes(x=NMDS1, y=NMDS2, group = SamplingDescription, fill = SamplingDescription),
alpha = 0.5) +
scale_fill_manual(values = c("#99597f","#660033","#9fb7b0","#296252"),
limits = c("Autumn 2017","Autumn 2018","Spring 2018","Spring 2019")) +
scale_color_manual(values=c("#99597f","#660033","#9fb7b0","#296252"))+
geom_polygon(data = hull.data_Season,
aes(x=NMDS1, y=NMDS2, group = Season, color = Season),
alpha = 0.8, fill = NA, linetype = "dashed", size = 1) +
scale_color_manual(values = c("#770e4c", "#22735c")) +
geom_point(data = data.scores,
aes(x = NMDS1, y = NMDS2, shape=Season),
size = 2,color = "#5d5f66") +
geom_text(aes(x = 1, y = -1, label = as.character(paste0(Cerco.NMDS.bray$ndim, "D Stress: ", round(as.numeric(Cerco.NMDS.bray$stress), digits = 4)))), parse = F,     color = "#5d5f66", size = 2) +
coord_equal() +
theme_minimal() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16, face = "bold"),
legend.text = element_text(size = 16),
legend.title = element_blank())+
theme(plot.title = element_text(hjust = 0.5, size= 14))+
theme(plot.margin = margin(1,1,1,1, "cm"))
g
a=g#fresh leaves
ggsave("NMDS_Leaves_300_160x120.jpeg", plot = a,
device = "jpeg", dpi = 300, width = 160, height = 120,
units = "mm")
ggsave("NMDS_Leaves_600_160x120.tif", plot = a,
device = "tiff", dpi = 600, width = 160, height = 120,
units = "mm")
g=ggplot() +
geom_polygon(data = hull.data,
aes(x=NMDS1, y=NMDS2, group = SamplingDescription, fill = SamplingDescription),
alpha = 0.5) +
scale_fill_manual(values = c("#99597f","#660033","#9fb7b0","#296252"),
limits = c("Autumn 2017","Autumn 2018","Spring 2018","Spring 2019")) +
scale_color_manual(values=c("#99597f","#660033","#9fb7b0","#296252"))+
geom_polygon(data = hull.data_Season,
aes(x=NMDS1, y=NMDS2, group = Season, color = Season),
alpha = 0.8, fill = NA, linetype = "dashed", size = 1) +
scale_color_manual(values = c("#770e4c", "#22735c")) +
geom_point(data = data.scores,
aes(x = NMDS1, y = NMDS2, shape=Season),
size = 2,color = "#5d5f66") +
geom_text(aes(x = 1, y = -1, label = as.character(paste0(Cerco.NMDS.bray$ndim, "D Stress: ", round(as.numeric(Cerco.NMDS.bray$stress), digits = 4)))), parse = F,     color = "#5d5f66", size = 3) +
coord_equal() +
theme_minimal() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16, face = "bold"),
legend.text = element_text(size = 16),
legend.title = element_blank())+
theme(plot.title = element_text(hjust = 0.5, size= 14))+
theme(plot.margin = margin(1,1,1,1, "cm"))
g
a=g#fresh leaves
ggsave("NMDS_Leaves_300_160x120.jpeg", plot = a,
device = "jpeg", dpi = 300, width = 160, height = 120,
units = "mm")
ggsave("NMDS_Leaves_600_160x120.tif", plot = a,
device = "tiff", dpi = 600, width = 160, height = 120,
units = "mm")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(vegan)
library(reshape2)
library(ggplot2)
library(ggpubr)
library(ggsignif)
#setwd("03_Alpha_Diversity")
OTU_Table = as.data.frame(read.csv2("../00_Data/05_Cercozoa_Seasonal_OTU_Table_min-freq-7633_transposed_withMetadata.csv",header = T))
SampleMetadata = OTU_Table[,1:17]
OTU_Table = OTU_Table[,18:ncol(OTU_Table)]
richness = specnumber(OTU_Table)
df = as.data.frame(richness)
#df$simpson = diversity(OTU_Table, index = "simpson")
df$shannon = diversity(OTU_Table, index = "shannon")
df$eveness = df$shannon/log(df$richness)
df$Microhabitat = SampleMetadata$Microhabitat
df$Season = SampleMetadata$Season
#df$TreeSpecies = SampleMetadata$TreeSpecies
#df$SamplingDescription = SampleMetadata$SamplingDescription
#df$MicrohabitatPerSampling = SampleMetadata$MicrohabitatPerSampling
#df$SamplingDescription = factor(df$SamplingDescription, levels = c('Autumn 2017','Spring 2018','Autumn 2018', 'Spring 2019' ))
df_melted = melt(df)
df_melted_sort <- df_melted
df_melted_sort$Microhabitat <- factor(df_melted_sort$Microhabitat,      # Reordering group factor levels
levels = c("Soil","Leaf Litter","Arboreal Soil","Hypnum","Orthotrichum",
"Bark","Lichen","Deadwood","Fresh Leaves"))
g = ggplot(df_melted_sort, aes(x = Season, y = value, fill = Season)) +
stat_boxplot(geom = "errorbar", width = 0.1, show.legend = F) +
geom_boxplot(show.legend = T) +
scale_fill_manual(values = alpha(c("#014636","#660033"), 0.8),
limits = c("Spring","Autumn")) +
scale_x_discrete(limits = c("Spring","Autumn")) +
theme_minimal() +
labs(y = "Alpha Diversity", x = "Season")+
theme(axis.text=element_text(size=14, face = "bold"),
axis.title=element_text(size=16, face = "bold"),
plot.subtitle = element_text(size = 14, hjust = 0.5),
strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(angle=45, hjust = 1),
legend.text = element_text(size = 16),
legend.title = element_text(size=16),
legend.position = "right") +
facet_grid(variable ~ Microhabitat, scales = "free", switch = "y")+
theme(plot.margin = margin(1,1,1,1, "cm")) +
stat_compare_means(comparisons = list(c("Spring","Autumn")), label = "p.signif",
size = 2.9, method = "t.test", exact=FALSE, vjust = 0.1,
symnum.args = list(cutpoints = c(0, 0.001, 0.01, 0.05, 1),
symbols = c("***", "**", "*","NS")))
g
